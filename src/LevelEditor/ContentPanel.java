/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ContentPanel.java
 *
 * Created on Jun 3, 2012, 10:07:10 PM
 */

package LevelEditor;

import java.awt.CardLayout;
import javax.swing.JComponent;
import javax.swing.JTabbedPane;


/**
 *
 * @author Jim
 */
public class ContentPanel extends javax.swing.JPanel
{
    private Editor editor;
    private TileSelector tselect;
    private NPCPlacer npcPlacer;
    private ItemPlacer itemPlacer;
    private DialogEditor dialogEditor;
    private DoorPlacer doorPlacer;
    private LevelSettingsEditor lsEditor;
    private RoomSettingsEditor rsEditor;
    private WarpPlacer warpPlacer;
    private ObjectiveEditor objectiveEditor;
    private SpawnPlacer spawnPlacer;
    private CameraEditor cameraEditor;
    private BossPlacer bossPlacer;
    private PlayerPathPlacer playerPathPlacer;

    /** Creates new form ContentPanel */
    public ContentPanel(Editor e)
    {
        initComponents();
        this.setLayout(new CardLayout());
        this.setSize(400, 500);
        this.setVisible(true);
        editor = e;
        
        tselect = new TileSelector(editor);
        npcPlacer = new NPCPlacer(editor);
        itemPlacer = new ItemPlacer(editor);
        dialogEditor = new DialogEditor(editor);
        doorPlacer = new DoorPlacer(editor);
        lsEditor = new LevelSettingsEditor(editor);
        rsEditor = new RoomSettingsEditor(editor);
        warpPlacer = new WarpPlacer(editor);
        objectiveEditor = new ObjectiveEditor(editor);
        spawnPlacer = new SpawnPlacer(editor);
        cameraEditor = new CameraEditor(editor);
        bossPlacer = new BossPlacer(editor);
        playerPathPlacer = new PlayerPathPlacer(editor);
        
        this.add(tselect, "TILE");
        this.add(npcPlacer, "NPC");
        this.add(itemPlacer, "ITEM");
        this.add(dialogEditor, "DIALOG");
        this.add(warpPlacer, "WARP");
        this.add(doorPlacer, "DOOR");
        this.add(lsEditor, "LEVEL_SETTINGS");
        this.add(rsEditor, "ROOM_SETTINGS");
        this.add(objectiveEditor, "OBJECTIVE");
        this.add(spawnPlacer, "SPAWN");
        this.add(cameraEditor, "CAMERA");
        this.add(bossPlacer, "BOSS");
        this.add(playerPathPlacer, "PLAYER_PATH");
        
    }

    public void enableNPCEditing()
    {
        npcPlacer.enableEditing();
    }

    public void disableNPCEditing()
    {
        npcPlacer.disableEditing();
    }

    public void updateLS()
    {
        lsEditor.update();
    }

    public void updateRS()
    {
        rsEditor.update();
    }

    //Edit things
    public void editNPC(NPC n)
    {
        npcPlacer.npc = n;
        npcPlacer.update();
    }

    public void editBoss(Boss b)
    {
        bossPlacer.boss = b;
        bossPlacer.update();
    }

    public void editDoor(Door d)
    {
        doorPlacer.door = d;
        doorPlacer.update();
    }

    public void editWarp(Warp w)
    {
        warpPlacer.warp = w;
        warpPlacer.update();
    }   

    public void editSpawn(Spawn s)
    {
        spawnPlacer.spawn = s;
        spawnPlacer.update();
    }

    public void editObjective(Objective o)
    {
        objectiveEditor.objective = o;
        objectiveEditor.update();
    }

    public void editCamera(SecurityCamera c)
    {
        cameraEditor.camera = c;
        cameraEditor.update();
    }

    public void clearNPCPathText()
    {
        npcPlacer.clearPathText();
    }

    public void clearPlayerPathText()
    {
        playerPathPlacer.clearPathText();
    }

    public void updateDialog()
    {
        dialogEditor.updateDialog(editor.currRoom.getDialogue());
    }

    public void updatePlayerPath()
    {
        playerPathPlacer.updatePath(editor.currRoom.playerPath);
    }

    public void updateWarpRooms()
    {
        warpPlacer.updateWarpRooms();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
